newlines = auto

input_tab_size  = 4
output_tab_size = 4

indent_with_tabs = 0
indent_columns   = 4

# Replace "<tab>" with "\t"
string_replace_tab_chars = true

utf8_bom  = remove


### Spacing ###
sp_arith   = force
sp_bool    = force
sp_compare = force
sp_assign  = force

sp_enum_brace  = force
sp_enum_assign = force

sp_pp_stringify        = force
sp_before_pp_stringify = force

sp_inside_paren  = remove       # ( foo ) vs (foo)
sp_paren_paren   = remove       # ( (foo) ) vs ((foo))
sp_cparen_oparen = remove       # (*foo) (bar) vs (*foo)(bar)

sp_paren_brace = force   # foo(){ vs foo() {
sp_brace_brace = force   # do {{ vs do { {



# Pointer star should be left aligned
sp_before_ptr_star  = remove
sp_between_ptr_star = remove
sp_after_ptr_star   = force
sp_after_ptr_star_qualifier = force
sp_ptr_star_func_var        = remove    # int (* foo)() vs int (*foo)()
sp_ptr_star_func_type       = remove    # typedef int (* foo)() vs typedef int (*foo)()
sp_ptr_star_paren = remove #? IDK what this does



# Control statements
sp_before_sparen     = force    # while( vs while (
sp_inside_sparen     = remove   # non-for ( x ) vs non-for (x)
sp_inside_for        = remove
sp_sparen_paren      = remove
sp_after_sparen      = force
sp_sparen_brace      = force
sp_do_brace_open     = force
sp_brace_close_while = force
sp_special_semi      = force    # if (accident); vs if (accident) ;
sp_before_semi_for   = remove   # for (a ; b ; c) vs for (a; b; c)

sp_before_semi_for_empty  = remove # for ( <here> ;;)
sp_between_semi_for_empty = remove # for (; <here> ;)
sp_after_semi_for_empty   = remove # for (;; <here> )




sp_after_semi     = add
sp_before_square  = remove   # cbuf [i] vs cbuf[i]
sp_before_squares = remove   # cbuf [] vs cbuf[]
sp_inside_square  = remove
sp_inside_square_empty = remove

sp_after_comma     = add
sp_after_ellipsis       = remove
sp_before_ellipsis      = add
sp_type_ellipsis        = remove
sp_ptr_type_ellipsis    = remove
sp_paren_ellipsis       = remove

sp_paren_qualifier = add

sp_after_cast        = force
sp_inside_paren_cast = remove

sp_sizeof_paren          = remove
sp_sizeof_ellipsis       = remove
sp_sizeof_ellipsis_paren = remove

sp_inside_braces_enum   = add
sp_inside_braces_struct = add
sp_inside_braces_empty  = remove
sp_inside_braces = add

sp_type_func = force
sp_func_proto_paren = remove
sp_func_proto_paren_empty = remove

sp_func_type_paren = remove
sp_func_def_paren  = remove
sp_func_def_paren_empty = remove
sp_inside_fparens = remove
sp_inside_fparen  = remove

sp_inside_tparen         = remove
sp_after_tparen_close    = remove
sp_square_fparen         = remove

sp_fparen_brace    = force
sp_func_call_paren = remove

sp_return_paren = force     # return(x) vs return (x)

sp_attribute_paren = remove

sp_defined_paren = remove
sp_macro_func    = force
sp_macro         = force

sp_else_brace = force
sp_brace_else = force
sp_brace_typedef = force

sp_cond_colon = force # x? y:z vs x? y : z
sp_cond_question_before = remove   # x ? y : z vs x? y : z
sp_cond_question_after  = force    # x?y : z vs x? y : z
sp_cond_ternary_short   = remove

sp_case_label = force

sp_cmt_cpp_start = force
sp_endif_cmt = force
sp_before_tr_cmt = force
sp_num_before_tr_cmt = 1

sp_before_bit_colon = force
sp_after_bit_colon = remove
    # unsigned isExtern :1


### Indentation ###
indent_continue = 4
indent_param = 4

indent_shift = 1
align_left_shift = false

indent_func_call_param  = true
indent_func_def_param   = true
indent_func_proto_param = true
indent_func_class_param = true

indent_member = 4
indent_switch_case = 4
indent_switch_body = 4

indent_relative_single_line_comments = true

indent_align_assign = false

indent_ternary_operator = 2
indent_inside_ternary_operator = true

### Newline ###
nl_collapse_empty_body = true
nl_collapse_empty_body_functions = true
nl_assign_leave_one_liners = true

nl_end_of_file = add
nl_end_of_file_min = 1

nl_assign_brace  = remove
nl_tsquare_brace = remove
nl_fcall_brace   = remove
nl_enum_brace    = remove
nl_struct_brace  = remove
nl_union_brace   = remove
nl_if_brace      = remove
nl_brace_else    = remove
nl_else_brace    = remove
nl_else_if       = remove
nl_for_brace     = remove
nl_while_brace   = remove
nl_do_brace      = remove
nl_brace_while   = remove
nl_switch_brace  = remove
nl_brace_brace   = force

nl_multi_line_sparen_open  = force     # Newline after multiline ( in statement
nl_multi_line_sparen_close = force     # Newline before multiline ) in statement

nl_case_colon_brace = remove
nl_enum_own_lines   = add

nl_func_type_name       = remove
nl_func_proto_type_name = remove

nl_func_paren            = remove
nl_func_paren_empty      = remove
nl_func_def_paren        = remove
nl_func_def_paren_empty  = remove
nl_func_call_paren       = remove
nl_func_call_paren_empty = remove


nl_func_decl_start        = remove
nl_func_def_start         = remove
nl_func_decl_start_single = remove
nl_func_def_start_single  = remove
nl_func_decl_start_multi_line = true
nl_func_def_start_multi_line  = true

nl_func_decl_args = ignore
nl_func_def_args  = ignore
nl_func_call_args = ignore
nl_func_decl_args_multi_line = true
nl_func_def_args_multi_line  = true
nl_func_call_args_multi_line = true

nl_func_decl_end        = remove
nl_func_def_end         = remove
nl_func_decl_end_single = remove
nl_func_def_end_single  = remove
nl_func_decl_end_multi_line = true
nl_func_def_end_multi_line  = true
nl_func_call_start = ignore
nl_func_call_end   = ignore
nl_func_call_start_multi_line = true
nl_func_call_end_multi_line   = true

nl_func_decl_empty = remove
nl_func_def_empty  = remove
nl_func_call_empty = remove

nl_fdef_brace_cond = remove
# int foo(void) {
# }

# vs

# int foo(void)
# {
# }

nl_return_expr = remove
nl_after_semicolon = true

nl_after_vbrace_close = true

nl_ds_struct_enum_close_brace = true

nl_split_if_one_liner = true
nl_split_for_one_liner = true
nl_split_while_one_liner = true


### Blank Lines ###
nl_max = 4 # 3 blank lines
nl_max_blank_in_func = 4

nl_before_func_body_def = 2 # 1
nl_after_func_proto_group = 1
nl_min_after_func_body = 1
nl_max_after_func_body = 4 # 3

### Positioning ###

pos_arith       = lead
pos_bool        = lead
pos_compare     = lead
pos_conditional = lead
pos_shift       = lead
pos_assign      = trail

pos_comma = trail
pos_enum_comma = trail_force

### Line Split ###
code_width = 80
ls_for_split_full  = true
ls_func_split_full = true

### Comments ###
cmt_width = 80

# /* yeet:
#  *  descr
#  */
cmt_star_cont = true
cmt_sp_before_star_cont = 0
cmt_sp_after_star_cont = 2


### Code Mod ###
mod_full_brace_do    = force
mod_full_brace_for   = force
mod_full_brace_if    = force
mod_full_brace_while = force

mod_full_paren_if_bool     = true
mod_full_paren_assign_bool = true
mod_full_paren_return_bool = true

mod_remove_extra_semicolon   = true
mod_remove_duplicate_include = false

mod_sort_import = true
mod_move_case_return = true
mod_enum_last_comma  = true

mod_int_short = remove
mod_int_long  = remove
mod_short_int = remove
mod_long_int  = remove
mod_int_unsigned = force
mod_int_signed   = force
mod_unsigned_int = force
mod_signed_int   = force







align_func_params = false
indent_paren_close = 2
